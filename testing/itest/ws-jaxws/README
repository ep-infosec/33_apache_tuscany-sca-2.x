
Scenarios
=========

General Patterns
----------------

For simple synchronous tests:

Jaxws client -> (b.ws service) SCA Component (b.ws reference) -> Jaxws Service

For callback or asynchronous tests

JUnit client -> SCA Component (b.ws reference) -> (b.ws service) SCA component

Java First
----------
scratch java component impl 
interface jaave (simple + JAXB + SDO )
?wsdl - gens wsdl
    
Java First with JAX-WS annotations
----------------------------------
WSDL -> wsimport -> Java component impl
interface java
?wsdl - re-gens wsdl

WSDL first
----------
Java component impl -> wsgen -> wsdl
interface wsdl
?wsld - provided wsdl

Policy
------
ws-policy (aac)

Java First
    WSpolicy from Policy set in definitions.xml
    ?wsdl - gens wsdl + policy
WSDL first
    WSpolicy from WSDL
    ?wsld - uses wsdl + policy 
  Policy signing

alternative bindings
--------------------
SOAP/HTTP
SOAP/HTTPS
SOAP/JMS
  How to retrieve WSDL for non-http bindings (a SHOULD in the spec)

asynchInvocation Intent
-----------------------
  Service
  Client

noListener Intent
-----------------
  ws-makeconnetion?


SOAP1.1 intent
--------------


SOAP1.2 intent
--------------

MTOM intent
--------------

callback
--------
new OASIS protocol
WSCallback ws policy

JAXWS Asynch APIs
-----------------

Streaming
---------
Do we need to support?
